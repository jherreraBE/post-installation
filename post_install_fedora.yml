- hosts: localhost
  tasks:
  - name: Set the  hostname to {{hostname}}
    shell: "hostnamectl hostname {{hostname}}.local.net"
    ignore_errors: yes

  - name: Configure Fastest mirror for DNF
    lineinfile:
        path: /etc/dnf/dnf.conf
        line: "fastestmirror=1"
        backup: "true"

  - name: Configure Maximum parallel downloads for DNF
    lineinfile:
        path: /etc/dnf/dnf.conf
        line: "max_parallel_downloads=10"
        backup: "true"

  - name: Configure usage of delta rpms for DNF
    lineinfile:
        path: /etc/dnf/dnf.conf
        line: "deltarpm=true"
        backup: "true"

  - name: Enable Fusion rpm repository (free)
    shell: "dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm -y"

  - name: Enable Fusion rpm  repository (non-free)
    shell: "dnf install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm -y"
    
  - name: check and  update all  the upgradeble packages in the  system
    dnf:
           name: "*"
           state: latest

  - name: Add the flathub flatpak repository remote to the installation
    community.general.flatpak_remote:
      name: flathub
      state: present
      flatpakrepo_url: https://dl.flathub.org/repo/flathub.flatpakrepo

  - name: Install multiple Flatpak packages
    community.general.flatpak:
      name:
        - com.bitwarden.desktop
        - com.mattjakeman.ExtensionManager
        - com.sindresorhus.Caprine
        - com.spotify.Client
        - dev.aunetx.deezer
        - io.github.mimbrero.WhatsAppDesktop
        - com.brave.Browser

  - name: Install nvidia software (dell laptop)
    dnf:
          name: "{{ item }}"
          state: present
    ignore_errors: yes
    loop:
          - akmod-nvidia
          - xorg-x11-drv-nvidia-cuda
    when: ansible_facts['ansible_product_name'] == "XPS 15 9570"

  - name: Install Software
    dnf:
          name: "{{ item }}"
          state: present
    ignore_errors: yes
    loop:
          - google-droid-*
          - filezilla
          - deluge
          - gimp
          - pinta
          - gimp-data-extras
          - audacious.x86_64
          - audacity-freeworld
          - vlc
          - audacious-plugins-freeworld.x86_64
          - transmission
          - alsa-plugins-pulseaudio
          - youtube-dl
          - ffmpeg
          - firewall-config
          - evolution
          - google-chrome-stable

  - name: Install system tools 
    dnf:
            name: "{{ item }}"
            state: present
    ignore_errors: yes
    loop:
            - htop
            - libcurl
            - vim  
            - liveusb-creator
            - gnome-tweak-tool
            - dconf-editor 
            - nmap
            - inxi.noarch  
            - glances
            - neofetch
            - screenfetch
            - hunspell-nl
            - grub-customizer
            - tldr
            - btop
            - powertop
            - neovim
            - tlp
            - flatseal
            - zsh
            - python3-ansible-lint 

  - name: Install smartcard Software
    dnf:
               name: "{{ item }}"
               state: present
    ignore_errors: yes
    loop: 
               - pcsc-lite.x86_64
               - pcsc-tools.x86_64
               - pcsc-lite-ccid.x86_64

  - name: Install Archive Software
    dnf:
               name: "{{ item }}"
               state: present
    ignore_errors: yes
    loop: 
               - cabextract 
               - lzip
               - p7zip
               - p7zip-plugins
               - unrar  

  - name: Install Development libraries and  Tools
    dnf:
               name: "{{ item }}"
               state: present
    ignore_errors: yes
    loop:
               - kernel-devel
               - dkms
               - kernel-headers
               - make
               - gcc
               - gcc-c++
               - java-openjdk


  - name: Install msttcorefonts
    script: /home/jherrera/Ansible/post-installation/scripts/msttcorefonts.sh
    ignore_errors: yes

  - name: Install ioscheduler 
    script: /home/jherrera/Ansible/post-installation/scripts/ioscheduler.sh
    ignore_errors: yes

  - name: Install Multi Media codecs 
    script: /home/jherrera/Ansible/post-installation/scripts/Multimedia.sh
    ignore_errors: yes

  - name: install  visual code 
    script: /home/jherrera/Ansible/post-installation/scripts/visualstudiocode.sh
    ignore_errors: yes

  - name: configure  wayland to use  different resolutions 
    script: /home/jherrera/Ansible/post-installation/scripts/wayland_config.sh
    ignore_errors: yes

  - name: Install Gnome themes
    dnf:
        name: "{{ item }}"
        state: present
    ignore_errors: yes
    loop:
         - arc-theme
         - gtk-murrine-engine
         - gtk-unico-engine
         - numix-icon-theme
         - numix-icon-theme-circle
         - numix-gtk-theme

  - name: Install Nautilius (Files) extentions 
    dnf:
        name: "{{ item }}"
        state: present
    ignore_errors: yes
    loop:
          - gnome-terminal-nautilus.x86_64
          - file-roller-nautilus.x86_64
          - nautilus-gsconnect.noarch
          - nautilus-extensions.x86_64

## finetuning desktop system:

  - name: Creates Themes directory in the  homedir
    ansible.builtin.file:
      path: "$HOME/.themes"
      state: directory

  - name: Creates icons directory in the  homedir
    ansible.builtin.file:
      path: "$HOME/.icons"
      state: directory
      
  - name: Configure Wayland on gnome
    shell: "gsettings set org.gnome.mutter experimental-features \"['scale-monitor-framebuffer']\""
    ignore_errors: yes
  
  - name:  enable the  GTK themes for the  flatpak software
    shell: "sudo flatpak override --filesystem=$HOME/.theme"
    ignore_errors: yes

  - name:  enable the  GTK icons for the  flatpak software
    shell: "sudo flatpak override --filesystem=$HOME/.icons"
    ignore_errors: yes
